# 可选基础镜像 ubuntu:22.04, ubuntu:20.04, ubuntu:18.04
FROM ubuntu:latest

# 阻止交互式提示
ARG DEBIAN_FRONTEND=noninteractive

# 安装基础软件包
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    gcc \
    g++ \
    wget \
    cmake \
    openssl \
    xz-utils \
    libunwind8 \
    libssl-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# 安装 Boost
RUN wget --no-check-certificate https://boostorg.jfrog.io/artifactory/main/release/1.84.0/source/boost_1_84_0.tar.bz2 \
    && tar -xjf boost_1_84_0.tar.bz2 \
    && rm boost_1_84_0.tar.bz2 \
    && cd boost_1_84_0/ \
    && ./bootstrap.sh \
    && ./b2 cxxflags=-fPIC \
    && ./b2 install --prefix=/usr \
    && cd .. \
    && rm -rf boost_1_84_0/

# 构建 jemalloc
RUN wget --no-check-certificate https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2 \
    && tar -xjf jemalloc-5.3.0.tar.bz2 \
    && rm jemalloc-5.3.0.tar.bz2 \
    && cd jemalloc-5.3.0 \
    && ./autogen.sh --with-jemalloc-prefix=je_ \
    && make -j$(nproc) \
    && make install_bin install_include install_lib \
    && cd .. \
    && rm -rf jemalloc-5.3.0/

# 构建 OpenSSL
RUN wget --no-check-certificate https://www.openssl.org/source/openssl-3.0.13.tar.gz \
    && tar -xzf openssl-3.0.13.tar.gz \
    && rm openssl-3.0.13.tar.gz \
    && cd openssl-3.0.13 \
    && ./Configure \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf openssl-3.0.13/

# 构建 OpenPPP2
WORKDIR /app
RUN git clone --single-branch --branch main https://github.com/liulilittle/openppp2 . \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release \
    && make -j$(nproc) \
    && chmod +x ppp \
    && cd ../bin \

ENTRYPOINT ["/app/bin/ppp"]
